<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>AbstractWormsSimUIStrategy</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>AbstractWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classAbstractWormsSimUIStrategy.html</Path>
    <Abstract>The abstract AbstractWormsSimUIStrategy class (similar to a Java or C# Interface or an Objective-C Pr...</Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentSim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AbstractWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classAbstractWormsSimUIStrategy.html</Path>
    <Anchor>a267d8dd6360c4eedd069f03ae091d047</Anchor>
    <Abstract>Template Method design pattern: Subclasses must override this method to provide user a interface spec...</Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processUserInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AbstractWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classAbstractWormsSimUIStrategy.html</Path>
    <Anchor>a5a46c4872248e8858e278459991edca3</Anchor>
    <Abstract>Template Method design pattern: Subclasses must override this method to provide user a interface spec...</Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>redrawDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AbstractWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classAbstractWormsSimUIStrategy.html</Path>
    <Anchor>a4a169ed8b730d8e17644e07cfacebe80</Anchor>
    <Abstract>Template Method design pattern: Subclasses must override this method to provide user a interface spec...</Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CursesWormsSimUIStrategy</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Abstract>Instances of CursesWormsSimUIStrategy provide NCurses based graphical display and user interaction of...</Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>confirmExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>a87d71f8fd8da2fac04b45fddba7bd6b3</Anchor>
    <Abstract>Call this function to request user interface specific confirmation that the simulation should exit (q...</Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentSim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>af451fb2158965ff8787a1b4daf21f2c2</Anchor>
    <Abstract>Override of AbstractWormsSimUIStrategy Template Method: Returns the simulation with which the CursesW...</Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processUserInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>a410f371d7491dae0b7a62a36161191bd</Anchor>
    <Abstract>Override of AbstractWormsSimUIStrategy Template Method: Call his function to perform user interface s...</Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>redrawDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>a5b879df5d8b10c02b034b625a6a81938</Anchor>
    <Abstract>Override of AbstractWormsSimUIStrategy Template Method: Call his function to request a redraw of the ...</Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeForDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>a4abc9705e863c029fd88d629dc69db7b</Anchor>
    <Abstract>Call this function once before calling any other CursesWormsSimUIStrategy functions. </Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>aa911596672b5873cc4313a6940bf14a6</Anchor>
    <Abstract>Call this function to make the available display if any being used by CursesWormsSimUIStrategy availa...</Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSlowness</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>ad7309b0b4a7b9d802a82793781d66a4f</Anchor>
    <Abstract>Returns the total number of delayQuantum intervals before each call to processUserInput() returns...</Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSlowness</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>adc4204cb34258a7fa4466fd240077bb3</Anchor>
    <Abstract>Sets the total number of delayQuantum intervals before each call to processUserInput() returns...</Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOneChar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>abccd8272a3096b0a2ad9b7d473d5d487</Anchor>
    <Abstract>Returns one available character of user input. </Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleUserKeyPress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>a8d3761fa1e86844e84dcbad324e5b32e</Anchor>
    <Abstract>Perform user interface specific logic in response to user input of the character, c...</Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>ade51b8036b48903f6ed518b42213fb7a</Anchor>
    <Abstract>Draw specified string of characters on row y on the display. </Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endCurses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>a4cc279c74cc377fbbd9106f0fad003d7</Anchor>
    <Abstract>Call to perform user interface specific shutdown / release of the display being used by the strategy...</Abstract>
    <DeclaredIn>CursesWormsSimUIStrategy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_sim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>a6af329ae482c962f4679b5a1d1c4e4b2</Anchor>
    <Abstract>The simulation instance to be displayed in a user interface specific way. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wormAttr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CursesWormsSimUIStrategy</Scope>
    </TokenIdentifier>
    <Path>classCursesWormsSimUIStrategy.html</Path>
    <Anchor>aad1bf332bbec520862e97fed9109a4a1</Anchor>
    <Abstract>A map from integer attribute IDs stored by the simulation to corresponding display attributes in the ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Worm</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Abstract>This class encapsulates a &quot;worm&quot; which lives, eats, moves, and eventually dies. </Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UniqueWormType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>a29eed8c049ed638e39bf780cb13e7d4d</Anchor>
    <Abstract>Type used to uniquely identify each type of worm The fact that this type is a pointer cannot be explo...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Worm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>a37ab25cceafd9420d649a42422130d38</Anchor>
    <Abstract>Constructs a worm instance with enough segments to store one each character in saying in a different ...</Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Worm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>a874ffb26860d81a2475bf04397909921</Anchor>
    <Abstract>Constructs a worm instance that contains copies of the range of segments from the tail up to but not ...</Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFoodValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>a618c7cdb90192fe590a4247ddfbfe6d5</Anchor>
    <Abstract>Returns the neutritional food value of the worm. </Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>segmentIndexAt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>ab30196a80927cc730903dd755d01ac8f</Anchor>
    <Abstract>Returns the index of one the worm&amp;#39;s segments of one or more of the worm&amp;#39;s segments other than segment...</Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>live</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>a5f002460a2a6509ced236a3512b3950e</Anchor>
    <Abstract>Call to execute one simulation step of the worm&amp;#39;s life. </Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onWasSlicedAtSegmentIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>a11ce882c6a211c025ef7c4f04ee6b13a</Anchor>
    <Abstract>Template Method: called when a worm has been sliced. </Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onWasEaten</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>ac67cf9ee5c70ca84d67b2de01b5cff8a</Anchor>
    <Abstract>Template Method: called when worm has been eaten As a side effect, this function decrements the count...</Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UniqueWormTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>ae42a777ea8ee9d5ec7a3247c6d602393</Anchor>
    <Abstract>This vector contains all possible unique worm types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHungry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>ac3c8807fc5a264881fff18911a1a7b95</Anchor>
    <Abstract>A Worm is hungry if its stomach foof content value at least 25% less that the worm&amp;#39;s stomach capacity...</Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateStatusBasedOnStomach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>ad0d55e4c70f84a03d97a192db6efd72a</Anchor>
    <Abstract>Changes the worm&amp;#39;s status based on the size of the worm and the amount of food in the worm&amp;#39;s stomach...</Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areAllSegmentsContiguous</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>a2db602e298adc5d12e17e53f0b46575d</Anchor>
    <Abstract>This function should only be used for pre and post condition assertion checking. </Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>foodValueOfCarrot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>ad59f9e74eec19d9b6b73455e317b3ec9</Anchor>
    <Abstract>Nutritional value of each carrot eaten by a worm. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vegetarianInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>ad31dc81417c3bb73da384adf661ee6d3</Anchor>
    <Abstract>Defines the information that distinguishes Vegetarian worms from other types of worms. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scissorInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>aafa4f9f8c49198af3528ea23377b5a44</Anchor>
    <Abstract>Defines the information that distinguishes ScissorHead worms from other types of worms. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cannibalInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Worm</Scope>
    </TokenIdentifier>
    <Path>classWorm.html</Path>
    <Anchor>a19af01646194cf84c18a67d3b491d68a</Anchor>
    <Abstract>Defines the information that distinguishes Cannibal worms from other types of worms. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Worm::Info</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Worm::Info</Scope>
    </TokenIdentifier>
    <Path>classWorm_1_1Info.html</Path>
    <Abstract>Instances of this class encapsulate everything that is different form one kind of Worm to another...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EatFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>Worm::Info</Scope>
    </TokenIdentifier>
    <Path>classWorm_1_1Info.html</Path>
    <Anchor>a3c834efa4693edf2509e22c8e3c16267</Anchor>
    <Abstract>Type of function pointer used to implement worm eating. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VegetarianEat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Worm::Info</Scope>
    </TokenIdentifier>
    <Path>classWorm_1_1Info.html</Path>
    <Anchor>a026df1e482e0062a8c520bf66ed02930</Anchor>
    <Abstract>This function implements eating logic for Vegitarian type worms. </Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScissorEat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Worm::Info</Scope>
    </TokenIdentifier>
    <Path>classWorm_1_1Info.html</Path>
    <Anchor>afcf6a7ad81ee547ffccf01ddc70285c6</Anchor>
    <Abstract>This function implements eating logic for ScissorHead type worms. </Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CannibalEat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Worm::Info</Scope>
    </TokenIdentifier>
    <Path>classWorm_1_1Info.html</Path>
    <Anchor>a282a07e6dd719b6dbff1700f9a2607b1</Anchor>
    <Abstract>This function implements eating logic for Cannibal type worms. </Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Worm::Info</Scope>
    </TokenIdentifier>
    <Path>classWorm_1_1Info.html</Path>
    <Anchor>a62bc9d7ea05cf048866ed4849ad64665</Anchor>
    <Abstract>The number of references to this Info (Used for simulation wide statistics) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Worm::segment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Worm::segment</Scope>
    </TokenIdentifier>
    <Path>classWorm_1_1segment.html</Path>
    <Abstract>Instances of this structure encapsulate information about each segment in a worm. ...</Abstract>
    <DeclaredIn>Worm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WormsSim</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Abstract>WormSim encapsulates the board and zero or more Worm instances. </Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runSimulation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a8a5f16496242faa2be8012611428cf91</Anchor>
    <Abstract>Each time this function is called, the simulation restarts from initial conditions with a pseudo rand...</Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initSingletonSim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>aff98fb3bc5288f412ecadbad40713bc7</Anchor>
    <Abstract>This function creates an instance of WormsSim with the specified board width and height. </Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSingletonSim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a5346ce1e05a7b5b77e6204dc3c8a0ac7</Anchor>
    <Abstract>This function should only be used for pre and post condition assertion checking. </Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRandomModX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>aa66627837764f1544c172839411e8ba0</Anchor>
    <Abstract>Utility function to return a pseudo random natural number in the range 0..(x-1). </Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxBoardHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a75663c87a66e0aa96ae94100b3bd8f71</Anchor>
    <Abstract>Returns the maximum number of rows of squares in a &quot;board&quot;. </Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxBoardWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>ad2b69a4b0f79879b4f18a22e8aa2cf5e</Anchor>
    <Abstract>Returns the maximum number of columns of squares in a &quot;board&quot;. </Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>board_column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>ac75dc25cc02cca8926b0bb15e7e34e4c</Anchor>
    <Abstract>The type of a single column in the simulation&amp;#39;s board. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>board</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a21a1d257a8a83806a7d68ed38096741f</Anchor>
    <Abstract>The type of the simulation&amp;#39;s board. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSlot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a3605455ccc2cc3888b5f3fe96a7a89fe</Anchor>
    <Abstract>Use this function to find an index where a non-living Worm can be replaced by a new living worm...</Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateBoardWithWorm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a28a7c11a6c25cd924c9f222f6f3e058d</Anchor>
    <Abstract>This function should be called any time a Worm in m_worms changes state e.g the worm has moved...</Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateBoardWithWormsAndCarrots</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>aeb9cfc8637af9373c514baba5a2ee6a5</Anchor>
    <Abstract>Set the attrs and characters in the simulation based on the positions of worms and carrots in the sim...</Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runSimulationStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>af1d569c73e2f1a8b745452f2e2ef1675</Anchor>
    <Abstract>This function executes one simulation step. </Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sprinkleCarrots</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a252910cd240e31339ae7bff45ac19dd2</Anchor>
    <Abstract>Places a carrot in every passive board square. </Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPassiveSquareAt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>aa05943dc6db1bdd8cac6f7e870f11a35</Anchor>
    <Abstract>Set the &quot;passive&quot; value of the square at {x,y} in the &quot;board&quot;. </Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVictimWorm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a0622fbe0e620ee04822ff2ffc5bf7193</Anchor>
    <Abstract>Finds a worm other than in_worm that has a segment with index &gt; 0 at the same position as in_worm&amp;#39;s h...</Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sliceVictim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a926a79421a420e4da5d8b156ca9602a7</Anchor>
    <Abstract>If an existing slot in is available and victimSegementNumber is 1 and &lt; the number of segments in vic...</Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WormsSim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>aa7ba29a93b86b72f49aa8a147c3c6123</Anchor>
    <Abstract>Constructs a WormsSim instance encapsulating a board with width columns and height rows of squares...</Abstract>
    <DeclaredIn>WormsSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_worms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a4ad0279d2f8c5dbbb9dc26efe4252913</Anchor>
    <Abstract>An arbitrary number of worms in the simulation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_high_water_mark</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a0cb27e86c0ce21b32379d8e79d567208</Anchor>
    <Abstract>The maximum number of worms that have ever been in the simulation simultaneously (per process invocat...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_passive_board</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>accfca1031c284d339601924fb1ed17f8</Anchor>
    <Abstract>A board used to store non-moving simulation elements i.e. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_screen_board</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a343d6c68b32a83d223a849aad51ec375</Anchor>
    <Abstract>A board used to store information to be directly presented to users. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_actual_board_width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>ae49554504b3bb98a330aa317ddb361e7</Anchor>
    <Abstract>The actual width of the simulation&amp;#39;s boards. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_actual_board_height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a29cc71837814a0ee2becfb2a8832c7b6</Anchor>
    <Abstract>The actual hight of the simulation&amp;#39;s boards. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_board_width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a65fcc7c418e78d6e985e426108df4beb</Anchor>
    <Abstract>Arbitrary value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_board_height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>ac435155319de733ae560954fa413e771</Anchor>
    <Abstract>Arbitrary value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sayings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>aa65abbd2daacecc3f635decf2449e934</Anchor>
    <Abstract>Stores an arbitrary number of &quot;sayings&quot; which are used when creating Worm instances. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>default_square_attr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a900b6d5044500bbe3231bfb6889ec395</Anchor>
    <Abstract>Arbitrary &quot;display&quot; attributes for each board square. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dead_attribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a0ecb259b00ab2ebfa0ab08d0e60a4956</Anchor>
    <Abstract>Arbitrary &quot;display&quot; attributes for dead worm segments. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>carrot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WormsSim</Scope>
    </TokenIdentifier>
    <Path>classWormsSim.html</Path>
    <Anchor>a1a199328d0d091208ac437e92aaed13f</Anchor>
    <Abstract>a carrot indicator char </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WormsSim::square</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WormsSim::square</Scope>
    </TokenIdentifier>
    <Path>structWormsSim_1_1square.html</Path>
    <Abstract>A &quot;board&quot; is a 2D array of square instances. </Abstract>
  </Token>
</Tokens>
